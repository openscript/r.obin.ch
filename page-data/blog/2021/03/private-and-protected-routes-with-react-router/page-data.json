{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/blog/2021/03/private-and-protected-routes-with-react-router","result":{"data":{"mdx":{"id":"ca4afe8f-68c8-5641-b969-5ee8ce952de4","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Private and protected routes with React Router\",\n  \"publishedAt\": \"2021-03-18T16:19:11.000Z\",\n  \"tags\": [\"React\", \"React Router\", \"Web technologies\", \"Authentication and Authorization\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://reactrouter.com/\"\n  }, \"React Router\"), \" is one of the most widely used tools to implement client-side routing in React. In the upcoming version 6, some things will change, as \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/ReactTraining/react-router/blob/dev/docs/advanced-guides/migrating-5-to-6.md\"\n  }, \"the migration guide\"), \" reveals.\"), mdx(\"p\", null, \"One use case that can be \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://stackoverflow.com/questions/47747754/how-to-rewrite-the-protected-private-route-using-typescript-and-react-router-4-a\"\n  }, \"repeatedly encountered\"), \" is checking an authorization and forwarding it accordingly. For example, a user wants to access the path \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"./admin/dashboard\"), \". If the user is suitably authenticated and authorized, the dashboard is displayed, otherwise the login form is displayed. After a successful login, the user should be redirected to the original requested path.\"), mdx(\"p\", null, \"To get a feel for the new React Router version, a migration from version 5 to 6 shall be reproduced with the mentioned use case.\"), mdx(\"h2\", {\n    \"id\": \"react-router-v5\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#react-router-v5\",\n    \"aria-label\": \"react router v5 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"React Router v5\"), mdx(\"p\", null, \"To implement the described use case, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Route>\"), \" component of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-router\"), \" is extended. If we use React functionally, we are actually talking about a composition rather than an extension.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import { useEffect } from 'react';\\nimport { Redirect, Route, RouteProps, useLocation } from 'react-router';\\n\\nexport type ProtectedRouteProps = {\\n  // Is the user authenticated?\\n  isAuthenticated: boolean;\\n  // Path to the sign in form\\n  authenticationPath: string;\\n  // Redirect path after authentication\\n  redirectPath: string;\\n  // Function to update the redirection path\\n  setRedirectPath: (path: string) => void;\\n} & RouteProps;\\n\\nexport default function ProtectedRoute({\\n  isAuthenticated,\\n  authenticationPath,\\n  redirectPath,\\n  setRedirectPath,\\n  ...routeProps\\n}: ProtectedRouteProps) {\\n  const currentLocation = useLocation();\\n\\n  // If the caller is not authenticated, save the current path.\\n  // Because we define the state of another component, this must happen in an effect.\\n  useEffect(() => {\\n    if (!isAuthenticated) {\\n      setRedirectPath(currentLocation.pathname);\\n    }\\n  }, [isAuthenticated, setRedirectPath, currentLocation]);\\n\\n  // If the caller is authenticated and no forwarding is necessary, render the requested route.\\n  if (isAuthenticated && redirectPath === currentLocation.pathname) {\\n    return <Route {...routeProps} />;\\n  } else {\\n    // If redirection is necessary, redirect to the path before authentication or to the login form, as appropriate.\\n    return <Redirect to={{ pathname: isAuthenticated ? redirectPath : authenticationPath }} />;\\n  }\\n}\\n\")), mdx(\"p\", null, \"The path for any forwarding and whether the caller is authenticated is stored in the application state. Possibly Redux or another library is used for this. To keep the example simple, we will keep this simple and store it in a React Context.\"), mdx(\"p\", null, \"To do this, we will first define a model that describes how the data structure of the React Context looks like.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"export type Session = {\\n  isAuthenticated?: boolean;\\n  redirectPath: string;\\n};\\n\\nexport const initialSession: Session = {\\n  redirectPath: ''\\n};\\n\")), mdx(\"p\", null, \"To use the React Context the following component and hook is provided.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import { createContext, useContext, useState } from \\\"react\\\";\\nimport { initialSession, Session } from \\\"../models/session\\\";\\n\\nexport const SessionContext = createContext<[Session, (session: Session) => void]>([initialSession, () => {}]);\\nexport const useSessionContext = () => useContext(SessionContext);\\n\\nexport const SessionContextProvider: React.FC = (props) => {\\n  const [sessionState, setSessionState] = useState(initialSession);\\n  const defaultSessionContext: [Session, typeof setSessionState]  = [sessionState, setSessionState];\\n\\n  return (\\n    <SessionContext.Provider value={defaultSessionContext}>\\n      {props.children}\\n    </SessionContext.Provider>\\n  );\\n\")), mdx(\"p\", null, \"This React Context is now to be made available to the application.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"ReactDOM.render(\\n  <React.StrictMode>\\n    <BrowserRouter>\\n      <SessionContextProvider>\\n        <App />\\n      </SessionContextProvider>\\n    </BrowserRouter>\\n  </React.StrictMode>,\\n  document.getElementById('root')\\n);\\n\")), mdx(\"p\", null, \"Now the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<ProtectedRoute>\"), \" can be used for paths which need authentication. Here is an example with different routes:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import ProtectedRoute, { ProtectedRouteProps } from '../components/ProtectedRoute';\\nimport { useSessionContext } from '../contexts/SessionContext';\\nimport { Route, Switch } from 'react-router';\\nimport Homepage from './Homepage';\\nimport Dashboard from './Dashboard';\\nimport Protected from './Protected';\\nimport Login from './Login';\\n\\nexport default function App() {\\n  const [sessionContext, updateSessionContext] = useSessionContext();\\n\\n  const setRedirectPath = (path: string) => {\\n    updateSessionContext({ ...sessionContext, redirectPath: path });\\n  };\\n\\n  const defaultProtectedRouteProps: ProtectedRouteProps = {\\n    isAuthenticated: !!sessionContext.isAuthenticated,\\n    authenticationPath: '/login',\\n    redirectPath: sessionContext.redirectPath,\\n    setRedirectPath: setRedirectPath\\n  };\\n\\n  return (\\n    <div>\\n      <Switch>\\n        <Route exact={true} path=\\\"/\\\" component={Homepage} />\\n        <ProtectedRoute {...defaultProtectedRouteProps} path=\\\"/dashboard\\\" component={Dashboard} />\\n        <ProtectedRoute {...defaultProtectedRouteProps} path=\\\"/protected\\\" component={Protected} />\\n        <Route path=\\\"/login\\\" component={Login} />\\n      </Switch>\\n    </div>\\n  );\\n}\\n\")), mdx(\"p\", null, \"The full example is available \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/openscript/react-router-private-protected-routes/tree/react-router-5\"\n  }, \"here\"), \".\"), mdx(\"h2\", {\n    \"id\": \"react-router-v6\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#react-router-v6\",\n    \"aria-label\": \"react router v6 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"React Router v6\"), mdx(\"p\", null, \"The migration to version 6 is quite simple.\"), mdx(\"p\", null, \"First, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-router\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-router-dom\"), \" packages would need to be updated. The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@types/react-router-dom\"), \" package is no longer needed, since the type definition is now integrated in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-router-dom\"), \".\"), mdx(\"p\", null, \"In the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<ProtectedRoute>\"), \" component, only \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Redirect>\"), \" needs to be replaced with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Navigate>\"), \". The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"to\"), \" property is preserved.\"), mdx(\"p\", null, \"The rest remains the same, except the application of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<ProtectedRoute>\"), \" (and also the original \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Route>\"), \").\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import ProtectedRoute, { ProtectedRouteProps } from '../components/ProtectedRoute';\\nimport { useSessionContext } from '../contexts/SessionContext';\\nimport { Route, Routes } from 'react-router';\\nimport Homepage from './Homepage';\\nimport Dashboard from './Dashboard';\\nimport Protected from './Protected';\\nimport Login from './Login';\\n\\nexport default function App() {\\n  const [sessionContext, updateSessionContext] = useSessionContext();\\n\\n  const setRedirectPath = (path: string) => {\\n    updateSessionContext({ ...sessionContext, redirectPath: path });\\n  };\\n\\n  const defaultProtectedRouteProps: ProtectedRouteProps = {\\n    isAuthenticated: !!sessionContext.isAuthenticated,\\n    authenticationPath: '/login',\\n    redirectPath: sessionContext.redirectPath,\\n    setRedirectPath: setRedirectPath\\n  };\\n\\n  return (\\n    <div>\\n      <Routes>\\n        <Route path=\\\"/\\\">\\n          <Homepage />\\n        </Route>\\n        <ProtectedRoute {...defaultProtectedRouteProps} path=\\\"dashboard\\\">\\n          <Dashboard />\\n        </ProtectedRoute>\\n        <ProtectedRoute {...defaultProtectedRouteProps} path=\\\"protected\\\">\\n          <Protected />\\n        </ProtectedRoute>\\n        <ProtectedRoute {...defaultProtectedRouteProps} path=\\\"nested\\\">\\n          <Route path=\\\"one\\\">\\n            <Protected />\\n          </Route>\\n          <Route path=\\\"two\\\">\\n            <Protected />\\n          </Route>\\n        </ProtectedRoute>\\n        <Route path=\\\"login\\\">\\n          <Login />\\n        </Route>\\n      </Routes>\\n    </div>\\n  );\\n}\\n\")), mdx(\"p\", null, \"It is obvious that in the routes the target component is no longer given as a property, but as a child element. This works the same way with our \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<ProtectedRoute>\"), \". \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Switch>\"), \" has been replaced by \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Routes>\"), \". Nesting is not a problem either.\"), mdx(\"p\", null, \"So all in all, the migration is done quickly. In the same repository the example can be found after the migration. Here is \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/openscript/react-router-private-protected-routes/tree/react-router-6\"\n  }, \"the link\"), \" to it.\"), mdx(\"h2\", {\n    \"id\": \"closing-words\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#closing-words\",\n    \"aria-label\": \"closing words permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Closing words\"), mdx(\"p\", null, \"The migration was not difficult. Especially the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/ReactTraining/react-router/blob/dev/docs/advanced-guides/migrating-5-to-6.md\"\n  }, \"guide\"), \" for the migration gives a quick overview of the changes.\"), mdx(\"p\", null, \"In my opinion, React Router has been improved in the right places. I like the easier nesting and also the router outlet feature.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"ca4afe8f-68c8-5641-b969-5ee8ce952de4","translations":[{"locale":"de-CH","path":"/de/blog/2021/03/private-protected-routes-with-react-router"}],"locale":"en-US","prefix":"en"}},"staticQueryHashes":["2083260541","3642656089","3836639380","4050711061"]}