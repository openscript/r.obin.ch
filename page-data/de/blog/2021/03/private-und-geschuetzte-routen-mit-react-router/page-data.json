{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/de/blog/2021/03/private-und-geschuetzte-routen-mit-react-router","result":{"data":{"mdx":{"id":"4c02a003-2497-5cf4-a8a7-188da38f48ad","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Private und gesch√ºtzte Routen mit React Router\",\n  \"publishedAt\": \"2021-03-18T16:19:11.000Z\",\n  \"tags\": [\"React\", \"React Router\", \"Web technologies\", \"Authentication and Authorization\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://reactrouter.com/\"\n  }, \"React Router\"), \" ist eines der meist verbreiteten Werkzeuge, um clientseitiges Routing in React zu realisieren. In der kommenden Version 6 werden sich einige Dinge ver\\xE4ndern, wie \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/ReactTraining/react-router/blob/dev/docs/advanced-guides/migrating-5-to-6.md\"\n  }, \"die Migrationsanleitung\"), \" offenbart.\"), mdx(\"p\", null, \"Ein Anwendungsfall, welchem \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://stackoverflow.com/questions/47747754/how-to-rewrite-the-protected-private-route-using-typescript-and-react-router-4-a\"\n  }, \"immer wieder begegnet\"), \" werden kann, ist das \\xDCberpr\\xFCfen einer Autorisierung und das entsprechende Weiterleiten. Ein Benutzer m\\xF6chte beispielsweise auf den Pfad \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"./admin/dashboard\"), \" zugreifen. Falls der Benutzer passend authentifiziert und autorisiert ist, wird das Dashboard angezeigt, ansonsten das Anmeldeformular. Nach einer erfolgreichen Anmeldung soll der Benutzer auf den urspr\\xFCnglich angefragten Pfad weitergeleitet werden.\"), mdx(\"p\", null, \"Um ein Gef\\xFChl f\\xFCr die neue React Router Version zu gewinnen, soll eine Migration von Version 5 auf 6 mit dem genannten Anwendungsfall nachvollzogen werden.\"), mdx(\"h2\", {\n    \"id\": \"react-router-v5\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#react-router-v5\",\n    \"aria-label\": \"react router v5 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"React Router v5\"), mdx(\"p\", null, \"Um den geschilderten Anwendungsfall zu implementieren wird die \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Route>\"), \"-Komponente von \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-router\"), \" erweitert. Wir React funktional verwendet, so ist die Rede eigentlich eher von einer Komposition als von einer Erweiterung.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import { useEffect } from 'react';\\nimport { Redirect, Route, RouteProps, useLocation } from 'react-router';\\n\\nexport type ProtectedRouteProps = {\\n  // Ist der Aufrufer authentifiziert?\\n  isAuthenticated: boolean;\\n  // Pfad zum Anmeldeformular\\n  authenticationPath: string;\\n  // Pfad wohin weitergeleitet werden soll, falls authentifiziert\\n  redirectPath: string;\\n  // Funktion um den Pfad f\\xFCr eine allf\\xE4llige Weiterleitung zu setzen\\n  setRedirectPath: (path: string) => void;\\n} & RouteProps;\\n\\nexport default function ProtectedRoute({\\n  isAuthenticated,\\n  authenticationPath,\\n  redirectPath,\\n  setRedirectPath,\\n  ...routeProps\\n}: ProtectedRouteProps) {\\n  const currentLocation = useLocation();\\n\\n  // Falls der Aufrufer nicht authentifiziert ist, den aktuellen Pfad speichern.\\n  // Dadurch, das wir den State einer anderen Komponente definieren, muss dies in einem Effect passieren.\\n  useEffect(() => {\\n    if (!isAuthenticated) {\\n      setRedirectPath(currentLocation.pathname);\\n    }\\n  }, [isAuthenticated, setRedirectPath, currentLocation]);\\n\\n  // Falls der Aufrufer authentifiziert und keine Weiterleitung notwendig ist, die angeforderte Route rendern.\\n  if (isAuthenticated && redirectPath === currentLocation.pathname) {\\n    return <Route {...routeProps} />;\\n  } else {\\n    // Falls eine Weiterleitung notwendig ist je nachdem auf den Pfad vor der Authentifizierung oder zum Anmeldeformular weiterleiten.\\n    return <Redirect to={{ pathname: isAuthenticated ? redirectPath : authenticationPath }} />;\\n  }\\n}\\n\")), mdx(\"p\", null, \"Der Pfad f\\xFCr eine allf\\xE4llige Weiterleitung und ob der Aufrufer Authentifiziert ist, wird im Application State gespeichert. M\\xF6glicherweise wird daf\\xFCr Redux oder eine andere Bibliothek eingesetzt. Um das Beispiel einfach zu halten, wir dies einfach gehalten und in einem React Context gespeichert.\"), mdx(\"p\", null, \"Daf\\xFCr soll erst einmal ein Model definiert werden, welches beschreibt wie die Datenstruktur des React Contexts aussieht.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"export type Session = {\\n  isAuthenticated?: boolean;\\n  redirectPath: string;\\n};\\n\\nexport const initialSession: Session = {\\n  redirectPath: ''\\n};\\n\")), mdx(\"p\", null, \"Um den React Context zu verwenden wird folgende Komponente und folgender Hook zur Verf\\xFCgung gestellt.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import { createContext, useContext, useState } from \\\"react\\\";\\nimport { initialSession, Session } from \\\"../models/session\\\";\\n\\nexport const SessionContext = createContext<[Session, (session: Session) => void]>([initialSession, () => {}]);\\nexport const useSessionContext = () => useContext(SessionContext);\\n\\nexport const SessionContextProvider: React.FC = (props) => {\\n  const [sessionState, setSessionState] = useState(initialSession);\\n  const defaultSessionContext: [Session, typeof setSessionState]  = [sessionState, setSessionState];\\n\\n  return (\\n    <SessionContext.Provider value={defaultSessionContext}>\\n      {props.children}\\n    </SessionContext.Provider>\\n  );\\n\")), mdx(\"p\", null, \"Dieser React Context soll nun der Applikation zur Verf\\xFCgung gestellt werden.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"ReactDOM.render(\\n  <React.StrictMode>\\n    <BrowserRouter>\\n      <SessionContextProvider>\\n        <App />\\n      </SessionContextProvider>\\n    </BrowserRouter>\\n  </React.StrictMode>,\\n  document.getElementById('root')\\n);\\n\")), mdx(\"p\", null, \"Jetzt kann die \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<ProtectedRoute>\"), \" f\\xFCr Pfade, welche eine Authentifizierung ben\\xF6tigen eingesetzt werden. Hier ein Beispiel mit verschiedenen Routen:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import ProtectedRoute, { ProtectedRouteProps } from '../components/ProtectedRoute';\\nimport { useSessionContext } from '../contexts/SessionContext';\\nimport { Route, Switch } from 'react-router';\\nimport Homepage from './Homepage';\\nimport Dashboard from './Dashboard';\\nimport Protected from './Protected';\\nimport Login from './Login';\\n\\nexport default function App() {\\n  const [sessionContext, updateSessionContext] = useSessionContext();\\n\\n  const setRedirectPath = (path: string) => {\\n    updateSessionContext({ ...sessionContext, redirectPath: path });\\n  };\\n\\n  const defaultProtectedRouteProps: ProtectedRouteProps = {\\n    isAuthenticated: !!sessionContext.isAuthenticated,\\n    authenticationPath: '/login',\\n    redirectPath: sessionContext.redirectPath,\\n    setRedirectPath: setRedirectPath\\n  };\\n\\n  return (\\n    <div>\\n      <Switch>\\n        <Route exact={true} path=\\\"/\\\" component={Homepage} />\\n        <ProtectedRoute {...defaultProtectedRouteProps} path=\\\"/dashboard\\\" component={Dashboard} />\\n        <ProtectedRoute {...defaultProtectedRouteProps} path=\\\"/protected\\\" component={Protected} />\\n        <Route path=\\\"/login\\\" component={Login} />\\n      </Switch>\\n    </div>\\n  );\\n}\\n\")), mdx(\"p\", null, \"Das vollst\\xE4ndige Beispiel ist \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/openscript/react-router-private-protected-routes/tree/react-router-5\"\n  }, \"hier\"), \" verf\\xFCgbar.\"), mdx(\"h2\", {\n    \"id\": \"react-router-v6\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#react-router-v6\",\n    \"aria-label\": \"react router v6 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"React Router v6\"), mdx(\"p\", null, \"Die Migration auf die Version 6 ist ziemlich simpel.\"), mdx(\"p\", null, \"Zuerst m\\xFCssten die Pakete \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-router\"), \" und \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-router-dom\"), \" aktualisiert werden. Das Paket \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@types/react-router-dom\"), \" wird nicht mehr ben\\xF6tigt, da die Typendefinition jetzt in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-router-dom\"), \" integriert ist.\"), mdx(\"p\", null, \"In der Komponente \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<ProtectedRoute>\"), \" muss nur \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Redirect>\"), \" mit \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Navigate>\"), \" ersetzt werden. Die Eigenschaft \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"to\"), \" blieb erhalten.\"), mdx(\"p\", null, \"Der Rest bleibt gleich, ausser die Anwendung der \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<ProtectedRoute>\"), \" (und auch der originalen \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Route>\"), \").\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"import ProtectedRoute, { ProtectedRouteProps } from '../components/ProtectedRoute';\\nimport { useSessionContext } from '../contexts/SessionContext';\\nimport { Route, Routes } from 'react-router';\\nimport Homepage from './Homepage';\\nimport Dashboard from './Dashboard';\\nimport Protected from './Protected';\\nimport Login from './Login';\\n\\nexport default function App() {\\n  const [sessionContext, updateSessionContext] = useSessionContext();\\n\\n  const setRedirectPath = (path: string) => {\\n    updateSessionContext({ ...sessionContext, redirectPath: path });\\n  };\\n\\n  const defaultProtectedRouteProps: ProtectedRouteProps = {\\n    isAuthenticated: !!sessionContext.isAuthenticated,\\n    authenticationPath: '/login',\\n    redirectPath: sessionContext.redirectPath,\\n    setRedirectPath: setRedirectPath\\n  };\\n\\n  return (\\n    <div>\\n      <Routes>\\n        <Route path=\\\"/\\\">\\n          <Homepage />\\n        </Route>\\n        <ProtectedRoute {...defaultProtectedRouteProps} path=\\\"dashboard\\\">\\n          <Dashboard />\\n        </ProtectedRoute>\\n        <ProtectedRoute {...defaultProtectedRouteProps} path=\\\"protected\\\">\\n          <Protected />\\n        </ProtectedRoute>\\n        <ProtectedRoute {...defaultProtectedRouteProps} path=\\\"nested\\\">\\n          <Route path=\\\"one\\\">\\n            <Protected />\\n          </Route>\\n          <Route path=\\\"two\\\">\\n            <Protected />\\n          </Route>\\n        </ProtectedRoute>\\n        <Route path=\\\"login\\\">\\n          <Login />\\n        </Route>\\n      </Routes>\\n    </div>\\n  );\\n}\\n\")), mdx(\"p\", null, \"Ersichtlich wird, dass in den Routen die Zielkomponente nicht mehr als Eigenschaft, sondern als Kindelement mitgegeben wird. Dies funktioniert genauso mit unserer \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<ProtectedRoute>\"), \". \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Switch>\"), \" wurde durch \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Routes>\"), \" ersetzt. Auch die Verschachtlung ist kein Problem.\"), mdx(\"p\", null, \"Alles in allem ist die Migration also schnell gemacht. Im selben Repository kann das Beispiel nach der Migration gefunden werden. Hier ist \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/openscript/react-router-private-protected-routes/tree/react-router-6\"\n  }, \"der Link\"), \" dazu.\"), mdx(\"h2\", {\n    \"id\": \"schlusswort\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#schlusswort\",\n    \"aria-label\": \"schlusswort permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Schlusswort\"), mdx(\"p\", null, \"Die Migration war nicht schwierig. Vor allem die \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/ReactTraining/react-router/blob/dev/docs/advanced-guides/migrating-5-to-6.md\"\n  }, \"Anleitung\"), \" zur Migration gibt einen schnellen \\xDCberblick zu den \\xC4nderungen.\"), mdx(\"p\", null, \"Meiner Meinung nach wurde React Router an den richtigen Stellen verbessert. Die einfachere Verschachtlung und auch die Router Outlet Funktion gefallen mir gut.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"4c02a003-2497-5cf4-a8a7-188da38f48ad","translations":[{"locale":"en-US","path":"/blog/2021/03/private-and-protected-routes-with-react-router"}],"locale":"de-CH","prefix":"de"}},"staticQueryHashes":["2083260541","3642656089","3836639380","4050711061"]}