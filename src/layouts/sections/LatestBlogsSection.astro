---
import { parseLocale, useTranslations } from "../../utils/i18n";
import PostCard from "../../components/PostCard.astro";
import CardList from "../../components/CardList.astro";
import { defaultBlogCollection } from "../../collections/blog";
import { i18nProps } from "astro-loader-i18n";
import { defaultPropsAndParamsOptions } from "../../utils/paths";
import { render } from "astro:content";
import slug from "limax";

type Props = {
  locale: string;
};

const locale = parseLocale(Astro.props.locale);
const t = useTranslations(locale);
const posts = i18nProps(defaultBlogCollection, {
  ...defaultPropsAndParamsOptions,
  routePattern: `[...locale]/[blog]/[...slug]`,
  generateSegments: (entry) => ({ slug: `${entry.data.contentPath}/${slug(entry.data.title)}` }),
});

const filteredPosts = posts.slice(0, 4);
---

<style>
  section :global(ul) {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
  }

  @media (max-width: 1280px) {
    section :global(ul) {
      grid-template-columns: 1fr;
    }
  }
</style>

<section>
  <h2>{t("latestPostsLabel")}</h2>
  <CardList>
    {
      filteredPosts.map(async (post) => {
        const { remarkPluginFrontmatter } = await render(post);
        return (
          <li>
            <PostCard
              title={post.data.title}
              cover={post.data.cover}
              publishedAt={post.data.publishedAt}
              translatedPath={post.translatedPath}
              excerpt={remarkPluginFrontmatter.excerpt}
            />
          </li>
        );
      })
    }
  </CardList>
</section>
