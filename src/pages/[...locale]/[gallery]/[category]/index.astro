---
import DefaultLayout from "../../../../layouts/DefaultLayout.astro";
import CardList from "../../../../components/CardList.astro";
import Page from "../../../../layouts/pages/Page.astro";
import { getCollection } from "astro:content";
import { i18nPropsAndParams } from "astro-loader-i18n";
import { defaultPropsAndParamsOptions } from "../../../../utils/paths";
import slug from "limax";
import Card from "../../../../components/Card.astro";

export const getStaticPaths = async () => {
  const routePattern = "[...locale]/[gallery]/[category]";
  const collection = await getCollection("gallery");

  return i18nPropsAndParams(collection, {
    ...defaultPropsAndParamsOptions,
    routePattern,
    generateSegments: (entry) => {
      const title = typeof entry.data.title === "string" ? entry.data.title : "";
      return { category: slug(title) };
    },
  });
};

const {
  translations,
  translatedPath,
  data: { title, images },
} = Astro.props;
---

<style>
  :global(.grid) {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 4rem;
  }
</style>

<DefaultLayout translations={translations}>
  <Page>
    <h1 slot="title">{title}</h1>
    <CardList classNames="grid">
      {
        images.map((image, index) => (
          <Card title={image.title?.toString() || ""} cover={image} link={`${translatedPath}/${index.toString()}`} />
        ))
      }
    </CardList>
  </Page>
</DefaultLayout>
