---
import DefaultLayout from "../../../layouts/DefaultLayout.astro";
import { parseLocale, useTranslations } from "../../../utils/i18n";
import Page from "../../../layouts/pages/Page.astro";
import { getCollection } from "astro:content";
import CardList from "../../../components/CardList.astro";
import GalleryCard from "../../../components/GalleryCard.astro";
import { generateGetStaticIndexPaths, resolvePath } from "../../../utils/paths";
import { C } from "../../../site.config";
import slug from "limax";

export const getStaticPaths = generateGetStaticIndexPaths(
  "[...locale]/[gallery]",
);
const { translations } = Astro.props;

const locale = parseLocale(Astro.props.data.locale);
const localeParam = locale === C.DEFAULT_LOCALE ? undefined : locale;
const collection = await getCollection(
  "gallery",
  (category) => category.data.locale === locale,
);
const t = useTranslations(locale);
---


<style>
  :global(.grid) {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1rem;
  }
</style>

<DefaultLayout translations={translations}>
  <Page>
    <h1>{t("galleryTitle")}</h1>
    <CardList classNames="grid">
      {
        collection
          .map(({ data: { cover, title } }) => {
            if (typeof title !== "string") {
              return null;
            }
            const url = resolvePath(localeParam, Astro.params.gallery, slug(title));
            return <GalleryCard title={title} cover={cover} path={url} />;
          })
          .filter(Boolean)
      }
    </CardList>
  </Page>
</DefaultLayout>
