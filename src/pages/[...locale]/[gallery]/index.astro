---
import DefaultLayout from "../../../layouts/DefaultLayout.astro";
import { parseLocale, useTranslations } from "../../../utils/i18n";
import Page from "../../../layouts/pages/Page.astro";
import { getCollection } from "astro:content";
import CardList from "../../../components/CardList.astro";
import { generateGetStaticIndexPaths, resolvePath } from "../../../utils/paths";
import { C } from "../../../site.config";
import slug from "limax";
import Meta from "../../../layouts/groups/Meta.astro";
import Card from "../../../components/Card.astro";

export const getStaticPaths = generateGetStaticIndexPaths(
  "[...locale]/[gallery]"
);
const {
  translations,
  data: { locale },
} = Astro.props;

const localeParam = locale === C.DEFAULT_LOCALE ? undefined : locale;
const collection = await getCollection(
  "gallery",
  (category) => category.data.locale === locale
);
const t = useTranslations(parseLocale(locale));
---

<style>
  :global(.grid) {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 4rem;
  }
</style>

<DefaultLayout translations={translations}>
  <Meta slot="meta" title={t("galleryTitle")} />
  <Page>
    <h1 slot="title">{t("galleryTitle")}</h1>
    <CardList classNames="grid">
      {
        collection
          .map(({ data: { cover, title } }) => {
            if (typeof title !== "string") {
              return null;
            }
            const url = resolvePath(
              localeParam,
              Astro.params.gallery,
              slug(title)
            );
            return <Card title={title} cover={{ src: cover }} link={url} />;
          })
          .filter(Boolean)
      }
    </CardList>
  </Page>
</DefaultLayout>
