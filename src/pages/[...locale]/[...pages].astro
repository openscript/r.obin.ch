---
import DefaultLayout from "../../layouts/DefaultLayout.astro";
import Meta from "../../layouts/groups/Meta.astro";
import { getCollection, render } from "astro:content";
import { i18nPropsAndParams } from "astro-loader-i18n";
import { defaultPropsAndParamsOptions } from "../../utils/paths";
import Article from "../../layouts/pages/Article.astro";
import ArticleWithAside from "../../layouts/pages/ArticleWithAside.astro";
import TableOfContents from "../../components/TableOfContents.astro";

export const getStaticPaths = async () => {
  const routePattern = "[...locale]/[...pages]";
  const collection = await getCollection("pages");

  return i18nPropsAndParams(collection, {
    ...defaultPropsAndParamsOptions,
    routePattern,
    generateSegments: (entry) => ({ pages: entry.data.path }),
  });
};

const {
  translations,
  data: { title, template },
} = Astro.props;
const { Content, headings } = await render(Astro.props);
---

<DefaultLayout translations={translations}>
  <Meta slot="meta" title={title} />
  {
    template === "article" && (
      <Article title={title}>
        <Content />
      </Article>
    )
  }
  {
    template === "article-with-aside" && (
      <ArticleWithAside title={title}>
        <Content />
        <Fragment slot="aside">
          <TableOfContents headings={headings} />
        </Fragment>
      </ArticleWithAside>
    )
  }
</DefaultLayout>
