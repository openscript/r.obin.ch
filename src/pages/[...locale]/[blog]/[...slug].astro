---
import type { InferGetStaticParamsType, InferGetStaticPropsType } from "astro";
import DefaultLayout from "../../../layouts/DefaultLayout.astro";
import { entryPaths } from "../../_paths";
import Post from "../../../layouts/pages/Post.astro";
import TableOfContents from "../../../components/TableOfContents.astro";
import GitInfo from "../../../components/GitInfo.astro";
import type { GitInfoFrontmatter } from "../../../remark/remark-git-info";
import { getLocaleFromUrl, useTranslations } from "../../../utils/i18n";
import { resolvePath } from "../../../utils/path";
import slug from "limax";
import Comments from '../../../components/Comments.astro';
import Meta from '../../../layouts/groups/Meta.astro';

export const getStaticPaths = entryPaths("blog", "slug");

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
type Params = InferGetStaticParamsType<typeof getStaticPaths>;

const { translations, render, data } = Astro.props as Props;
const { Content, headings, remarkPluginFrontmatter } = await render();
const git: GitInfoFrontmatter["git"] = remarkPluginFrontmatter.git;
const locale = getLocaleFromUrl(Astro.url);
const t = useTranslations(locale);
const { locale: localeSlug } = Astro.params as Params;
const blogSlug = "blog" in Astro.params ? Astro.params.blog : "";
---

<DefaultLayout translations={translations}>
  <Meta slot="meta" title={data.title} />
  <Post frontmatter={{title: data.title}}>
    <TableOfContents slot="left" headings={headings} />
    <Content />
    <Comments />
    <Fragment slot="right">
      <GitInfo git={git}>
        <Fragment slot="after">
          <dt>{t("tagsLabel")}</dt>
          <dd>
            {
              data.tags.map((tag) => (
                <a href={resolvePath(localeSlug, blogSlug, slug(tag))}>{tag}</a>
              ))
            }
          </dd>
        </Fragment>
      </GitInfo>
    </Fragment>
  </Post>
</DefaultLayout>
