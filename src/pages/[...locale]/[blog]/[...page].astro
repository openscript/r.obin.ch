---
import type { InferGetStaticPropsType } from "astro";
import DefaultLayout from "../../../layouts/DefaultLayout.astro";
import { useTranslations } from "../../../utils/i18n";
import { blogPagePaths } from "../../_paths";
import Page from "../../../layouts/pages/Page.astro";
import PostCard from "../../../components/PostCard.astro";
import CardList from "../../../components/CardList.astro";
import Pagination from "../../../components/Pagination.astro";
import Meta from '../../../layouts/groups/Meta.astro';

export const getStaticPaths = blogPagePaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const { page, locale, translations } = Astro.props as Props;
const pagedTranslations = Object.entries(translations).reduce<
  Record<string, string>
>((acc, [l, t]) => {
  acc[l] = page.currentPage === 1 ? t : `${t}/${page.currentPage}`;
  return acc;
}, {});
const t = useTranslations(locale);
---

<style>
  :global(.vertical) {
    display: flex;
    flex-direction: column;
    gap: 1.4rem;
    margin: 1.4rem 0 !important;
  }
</style>

<DefaultLayout translations={pagedTranslations}>
  <Meta slot="meta" title={t('blogTitle')} />
  <Page>
    <h1 slot="title">{t("blogTitle")}</h1>
    <Pagination page={page} />
    <CardList classNames="vertical">
      {
        page.data.map(async (post) => (
          <li>
            <PostCard post={post} locale={locale} />
          </li>
        ))
      }
    </CardList>
    <Pagination page={page} />
  </Page>
</DefaultLayout>
