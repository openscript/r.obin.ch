{"version":3,"file":"component---src-templates-blog-listing-tsx-3b83961c9d515c6c3a3a.js","mappings":"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","sources":["webpack://r.obin.ch/./src/components/BlogItem.tsx","webpack://r.obin.ch/./src/components/Pagination.tsx","webpack://r.obin.ch/./src/configuration.ts","webpack://r.obin.ch/./src/components/TagList.tsx","webpack://r.obin.ch/./src/templates/BlogListing.tsx"],"sourcesContent":["import { css } from '@emotion/react';\nimport { Link } from 'gatsby';\nimport { ElementType } from 'react';\nimport { FormattedDate, FormattedTime } from 'react-intl';\n\nconst blogItemStyles = css`\n  margin-bottom: 2rem;\n`;\n\nconst metaDataStyles = css`\n  display: flex;\n  margin-bottom: 0.5rem;\n`;\n\ntype BlogItemProps = {\n  excerpt: string;\n  path: string;\n  title: string;\n  publishedAt: string;\n  tagList?: JSX.Element;\n  titleAs?: ElementType;\n};\n\nexport function BlogItem({ excerpt, path, title, publishedAt, tagList, titleAs: Title = 'h2' }: BlogItemProps) {\n  return (\n    <div css={blogItemStyles}>\n      <Link to={path}>\n        <Title>{title}</Title>\n      </Link>\n      <div css={metaDataStyles}>\n        <FormattedDate value={publishedAt} /> <FormattedTime value={publishedAt} />\n        {tagList}\n      </div>\n      {excerpt}\n    </div>\n  );\n}\n","import { Link } from 'gatsby';\nimport { Fragment } from 'react';\nimport { FormattedMessage } from 'react-intl';\n\ntype PaginationProps = {\n  currentPage: number;\n  pageCount: number;\n};\n\nexport function Pagination({ currentPage, pageCount }: PaginationProps) {\n  if (pageCount <= 1) {\n    return null;\n  }\n\n  let newestPath = '';\n  let newerPath = '';\n  let olderPath = '';\n  let oldestPath = '';\n\n  if (currentPage !== 1) {\n    newestPath = `..`;\n  }\n\n  if (currentPage === 2) {\n    newerPath = `../`;\n  } else if (currentPage > 1) {\n    newerPath = `../${currentPage - 2}`;\n  }\n\n  if (currentPage === 1) {\n    olderPath = `./${currentPage}`;\n  } else if (currentPage !== pageCount) {\n    olderPath = `../${currentPage}`;\n  }\n\n  if (currentPage === 1) {\n    oldestPath = `./${pageCount - 1}`;\n  } else if (currentPage !== pageCount) {\n    oldestPath = `../${pageCount - 1}`;\n  }\n\n  return (\n    <Fragment>\n      {newestPath && (\n        <Link to=\"..\">\n          <FormattedMessage id=\"navigation.pagination.newest\" />\n        </Link>\n      )}\n      {newerPath && (\n        <Link to={newerPath}>\n          <FormattedMessage id=\"navigation.pagination.newer\" />\n        </Link>\n      )}\n      {olderPath && (\n        <Link to={olderPath}>\n          <FormattedMessage id=\"navigation.pagination.older\" />\n        </Link>\n      )}\n      {oldestPath && (\n        <Link to={oldestPath}>\n          <FormattedMessage id=\"navigation.pagination.oldest\" />\n        </Link>\n      )}\n    </Fragment>\n  );\n}\n","export const CONFIGURATION = {\n  PATHS: {\n    BLOG: '/blog',\n    MEDIAS: '/medias',\n    PROJECTS: '/projects',\n    TAG: '/tag',\n  },\n  PAGINATION: {\n    ITEMS_PER_PAGE: 10,\n  },\n};\n","import { css } from '@emotion/react';\nimport { LocalizedLink } from 'gatsby-plugin-i18n-l10n';\nimport { CONFIGURATION } from '../configuration';\n\nconst tagListStyles = css`\n  display: flex;\n  list-style: none;\n  padding: 0;\n\n  li {\n    margin-left: 1rem;\n    white-space: nowrap;\n  }\n`;\n\ntype TagListProps = {\n  locale?: string;\n  tags?: {\n    slug?: string;\n    title?: string;\n  }[];\n};\n\nexport function TagList({ locale, tags }: TagListProps) {\n  if (!locale) {\n    return null;\n  }\n  return (\n    <ul css={tagListStyles}>\n      {tags?.map(t => (\n        <li>\n          <LocalizedLink to={`${CONFIGURATION.PATHS.TAG}/${t.slug}`}>{t.title}</LocalizedLink>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { graphql, PageProps } from 'gatsby';\nimport { FormattedMessage } from 'react-intl';\nimport { BlogListingPageQuery } from '../../graphql-types';\nimport { BlogItem } from '../components/BlogItem';\nimport { Pagination } from '../components/Pagination';\nimport { TagList } from '../components/TagList';\nimport { DefaultLayout } from '../layouts/DefaultLayout';\nimport { PaginationContext } from '../types';\n\nexport default function BlogListing({ data, pageContext }: PageProps<BlogListingPageQuery, PaginationContext>) {\n  return (\n    <DefaultLayout>\n      <h1>\n        <FormattedMessage id=\"page.blog.title\" />\n      </h1>\n      {data.posts.nodes.map(post => {\n        if (!post.fields?.path || !post.frontmatter?.title || typeof post.frontmatter.publishedAt !== 'string') {\n          return null;\n        }\n        const tagList = <TagList locale={post.fields.locale} tags={post.fields.tags} />;\n        return (\n          <BlogItem\n            excerpt={post.excerpt}\n            path={post.fields.path}\n            title={post.frontmatter.title}\n            publishedAt={post.frontmatter.publishedAt}\n            tagList={tagList}\n          />\n        );\n      })}\n      <Pagination currentPage={pageContext.currentPage} pageCount={pageContext.pageCount} />\n    </DefaultLayout>\n  );\n}\n\nexport const query = graphql`\n  query BlogListingPage($locale: String!, $limit: Int!, $skip: Int!) {\n    posts: allMdx(\n      filter: { fields: { kind: { glob: \"blog/**\" }, locale: { eq: $locale } }, frontmatter: { draft: { ne: true } } }\n      sort: { fields: frontmatter___publishedAt, order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        excerpt\n        fields {\n          locale\n          path\n          tags {\n            slug\n            title\n          }\n        }\n        frontmatter {\n          title\n          publishedAt\n        }\n      }\n    }\n  }\n`;\n"],"names":["blogItemStyles","metaDataStyles","BlogItem","excerpt","path","title","publishedAt","tagList","titleAs","Title","___EmotionJSX","css","Link","to","FormattedDate","value","FormattedTime","Pagination","currentPage","pageCount","newestPath","newerPath","olderPath","oldestPath","Fragment","FormattedMessage","id","CONFIGURATION","BLOG","MEDIAS","PROJECTS","TAG","tagListStyles","TagList","locale","tags","map","t","LocalizedLink","slug","BlogListing","data","pageContext","DefaultLayout","posts","nodes","post","fields","_post$fields","frontmatter","_post$frontmatter"],"sourceRoot":""}